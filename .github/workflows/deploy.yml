name: Deploy Frontend Service

on:
  push:
    branches:
      - main  # Adjust this as necessary for your workflow

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install --production

      - name: Setup Environment Variables
        run: echo "VITE_API_URL=${{ secrets.REACT_APP_API_URL }}" > .env

      - name: Build
        run: npm run build
        env:
          CI: false

      - name: Upload artifact to enable deployment
        uses: actions/upload-artifact@v4
        with:
          name: production-files
          path: ./dist

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: production-files
          path: ./dist

      - name: Deploy to Server
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "./dist/*"
          target: "/srv/wbb/frontend"  # Specify the target directory on your server

      - name: SSH and Deploy
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd /srv/wbb/frontend
            git pull origin main
            docker compose --profile production down
            docker compose --profile production build --no-cache
            docker compose --profile production up -d
